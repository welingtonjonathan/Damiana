{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\welington_miranda-rp\\\\Desktop\\\\recode-react-native-main\\\\src\\\\screens\\\\ForgotPasswordScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Background from \"../components/Background\";\nimport BackButton from \"../components/BackButton\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport TextInput from \"../components/TextInput\";\nimport Button from \"../components/Button\";\nimport { emailValidator } from \"../helpers/emailValidator\";\n\nvar ForgotPasswordScreen = function ForgotPasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var sendResetPasswordEmail = function sendResetPasswordEmail() {\n    var emailError = emailValidator(email.value);\n\n    if (emailError) {\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      return;\n    }\n\n    navigation.navigate('LoginScreen');\n  };\n\n  return React.createElement(Background, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(BackButton, {\n    goBack: navigation.goBack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), React.createElement(Logo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Esqueci minha Senha\"), React.createElement(TextInput, {\n    label: \"E-mail address\",\n    returnKeyType: \"done\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    description: \"Voce receber\\xE1 no email um link para redefinir a senha.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: sendResetPasswordEmail,\n    style: {\n      marginTop: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Enviar E-mail\"));\n};\n\nexport default ForgotPasswordScreen;","map":{"version":3,"sources":["C:/Users/welington_miranda-rp/Desktop/recode-react-native-main/src/screens/ForgotPasswordScreen.js"],"names":["React","useState","Background","BackButton","Logo","Header","TextInput","Button","emailValidator","ForgotPasswordScreen","navigation","value","error","email","setEmail","sendResetPasswordEmail","emailError","navigate","goBack","text","marginTop"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,OAAOC,MAAP;AACA,SAASC,cAAT;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,kBACrBT,QAAQ,CAAC;AAAEU,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAAD,CADa;AAAA;AAAA,MACxCC,KADwC;AAAA,MACjCC,QADiC;;AAG/C,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACnC,QAAMC,UAAU,GAAGR,cAAc,CAACK,KAAK,CAACF,KAAP,CAAjC;;AACA,QAAIK,UAAJ,EAAgB;AACdF,MAAAA,QAAQ,iCAAMD,KAAN;AAAaD,QAAAA,KAAK,EAAEI;AAApB,SAAR;AACA;AACD;;AACDN,IAAAA,UAAU,CAACO,QAAX,CAAoB,aAApB;AACD,GAPD;;AASA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEP,UAAU,CAACQ,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHF,EAIE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,gBADR;AAEE,IAAA,aAAa,EAAC,MAFhB;AAGE,IAAA,KAAK,EAAEL,KAAK,CAACF,KAHf;AAIE,IAAA,YAAY,EAAE,sBAACQ,IAAD;AAAA,aAAUL,QAAQ,CAAC;AAAEH,QAAAA,KAAK,EAAEQ,IAAT;AAAeP,QAAAA,KAAK,EAAE;AAAtB,OAAD,CAAlB;AAAA,KAJhB;AAKE,IAAA,KAAK,EAAE,CAAC,CAACC,KAAK,CAACD,KALjB;AAME,IAAA,SAAS,EAAEC,KAAK,CAACD,KANnB;AAOE,IAAA,cAAc,EAAC,MAPjB;AAQE,IAAA,gBAAgB,EAAC,OARnB;AASE,IAAA,eAAe,EAAC,cATlB;AAUE,IAAA,YAAY,EAAC,eAVf;AAWE,IAAA,WAAW,EAAC,2DAXd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAiBE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,OAAO,EAAEG,sBAFX;AAGE,IAAA,KAAK,EAAE;AAAEK,MAAAA,SAAS,EAAE;AAAb,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAjBF,CADF;AA2BD,CAvCD;;AAyCA,eAAeX,oBAAf","sourcesContent":["import React, { useState } from 'react'\nimport Background from '../components/Background'\nimport BackButton from '../components/BackButton'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport TextInput from '../components/TextInput'\nimport Button from '../components/Button'\nimport { emailValidator } from '../helpers/emailValidator'\n\nconst ForgotPasswordScreen = ({ navigation }) => {\n  const [email, setEmail] = useState({ value: '', error: '' })\n\n  const sendResetPasswordEmail = () => {\n    const emailError = emailValidator(email.value)\n    if (emailError) {\n      setEmail({ ...email, error: emailError })\n      return\n    }\n    navigation.navigate('LoginScreen')\n  }\n\n  return (\n    <Background>\n      <BackButton goBack={navigation.goBack} />\n      <Logo />\n      <Header>Esqueci minha Senha</Header>\n      <TextInput\n        label=\"E-mail address\"\n        returnKeyType=\"done\"\n        value={email.value}\n        onChangeText={(text) => setEmail({ value: text, error: '' })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n        description=\"Voce receberÃ¡ no email um link para redefinir a senha.\"\n      />\n      <Button\n        mode=\"contained\"\n        onPress={sendResetPasswordEmail}\n        style={{ marginTop: 16 }}\n      >\n        Enviar E-mail\n      </Button>\n    </Background>\n  )\n}\n\nexport default ForgotPasswordScreen\n"]},"metadata":{},"sourceType":"module"}